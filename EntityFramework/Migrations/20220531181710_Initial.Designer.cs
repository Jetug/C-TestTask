// <auto-generated />
using System;
using EntityFramework.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EntityFramework.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20220531181710_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EntityFramework.Data.Tables.Buyer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Buyers");
                });

            modelBuilder.Entity("EntityFramework.Data.Tables.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("EntityFramework.Data.Tables.ProvidedProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ProductQuantity")
                        .HasColumnType("int");

                    b.Property<int?>("SalesPointId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SalesPointId");

                    b.ToTable("ProvidedProducts");
                });

            modelBuilder.Entity("EntityFramework.Data.Tables.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BayerId")
                        .HasColumnType("int");

                    b.Property<int?>("BuyerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("SalesPointId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<float>("TotalAmount")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("EntityFramework.Data.Tables.SaleData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<float>("ProductIdAmount")
                        .HasColumnType("real");

                    b.Property<int>("ProductQuantity")
                        .HasColumnType("int");

                    b.Property<int?>("SaleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SaleId");

                    b.ToTable("SalesData");
                });

            modelBuilder.Entity("EntityFramework.Data.Tables.SalesPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SalesPoints");
                });

            modelBuilder.Entity("EntityFramework.Data.Tables.ProvidedProduct", b =>
                {
                    b.HasOne("EntityFramework.Data.Tables.SalesPoint", null)
                        .WithMany("ProvidedProducts")
                        .HasForeignKey("SalesPointId");
                });

            modelBuilder.Entity("EntityFramework.Data.Tables.Sale", b =>
                {
                    b.HasOne("EntityFramework.Data.Tables.Buyer", null)
                        .WithMany("SaleIds")
                        .HasForeignKey("BuyerId");
                });

            modelBuilder.Entity("EntityFramework.Data.Tables.SaleData", b =>
                {
                    b.HasOne("EntityFramework.Data.Tables.Sale", null)
                        .WithMany("SalesData")
                        .HasForeignKey("SaleId");
                });

            modelBuilder.Entity("EntityFramework.Data.Tables.Buyer", b =>
                {
                    b.Navigation("SaleIds");
                });

            modelBuilder.Entity("EntityFramework.Data.Tables.Sale", b =>
                {
                    b.Navigation("SalesData");
                });

            modelBuilder.Entity("EntityFramework.Data.Tables.SalesPoint", b =>
                {
                    b.Navigation("ProvidedProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
